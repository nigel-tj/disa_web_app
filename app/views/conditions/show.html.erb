<div class="container-fluid">
    <%- model_class = Condition -%>
    <div class="page-header">
	<h1><%=t '.title', :default => model_class.model_name.human.titleize %></h1>
    </div>
    
    <dl class="dl-horizontal">
	<dt><strong><%= model_class.human_attribute_name(:name) %>:</strong></dt>
	<dd><%= @condition.name %></dd>
	<dt><strong><%= model_class.human_attribute_name(:gender) %>:</strong></dt>
	<dd><%= @condition.gender %></dd>
	<dt><strong><%= model_class.human_attribute_name(:age) %>:</strong></dt>
	<dd><%= @condition.age %></dd>
	<dt><strong><%= model_class.human_attribute_name(:latitude) %>:</strong></dt>
	<dd><%= @condition.latitude %></dd>
	<dt><strong><%= model_class.human_attribute_name(:longitude) %>:</strong></dt>
	<dd><%= @condition.longitude %></dd>
	<dt><strong><%= model_class.human_attribute_name(:status) %>:</strong></dt>
	<dd><%= @condition.status %></dd>
	<dt><strong><%= model_class.human_attribute_name(:area) %>:</strong></dt>
	<dd><%= @condition.area %></dd>
    </dl>
    
    <%= link_to t('.back', :default => t("helpers.links.back")), conditions_path, :class => 'btn btn-default'  %>
    <%= link_to t('.edit', :default => t("helpers.links.edit")), edit_condition_path(@condition), :class => 'btn btn-default' %>
    <%= link_to t('.destroy', :default => t("helpers.links.destroy")), condition_path(@condition), :method => 'delete', :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-danger' %>
    
    <div class="col-md-12">
	<canvas id="myChart" width="400" height="400"></canvas>
    </div>
    <div class="row">
	<div class="col-md-6">
	    <%= image_tag "http://maps.googleapis.com/maps/api/staticmap?center=#{@condition.latitude},#{@condition.longitude}&markers=#{@condition.latitude},#{@condition.longitude}&zoom=7&size=800x600&key=AIzaSyA4BHW3txEdqfxzdTlPwaHsYRSZbfeIcd8", class: 'img-fluid img-rounded', alt: "#{@condition.name} on the map"%>
	</div>
	<div class="col-md-6">
	    <table class="table table-bordered">
		<thead class="thead-inverse">
		    <tr class="info">
			<th>Age (years)</th>
			<th>Male</th>
			<th>Female</th>
			<th>Total</th>
		    </tr>
		</thead>
		<tbody>
		    <tr>
			<th scope="row">0-2</th>
			<td>23</td>
			<td>145</td>
			<td>168</td>
		    </tr>
		    <tr>
			<th scope="row">2-5</th>
			<td>34</td>
			<td>12</td>
			<td>46</td>
		    </tr>
		    <tr>
			<th scope="row">5-12</th>
			<td>13</td>
			<td>19</td>
			<td>32</td>
		    </tr>
		</tbody>
	    </table>
	</div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.0/Chart.bundle.min.js"></script> 
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script> 
<script>
 function randomNumber(min, max) {
     return Math.random() * (max - min) + min;
 }
 
 function randomBar(date, lastClose) {
     var open = randomNumber(lastClose * .95, lastClose * 1.05);
     var close = randomNumber(open * .95, open * 1.05);
     var high = randomNumber(Math.max(open, close), Math.max(open, close) * 1.1);
     var low = randomNumber(Math.min(open, close) * .9, Math.min(open, close));
     return {
	 t: date.valueOf(),
	 y: close
     };
 }
 
 var dateFormat = 'MMMM DD YYYY';
 var date = moment('April 01 2017', dateFormat);
 var data = [randomBar(date, 30)];
 var data2 = [randomBar(date, 30)];
 var labels = [date];
 while (data.length < 30) {
     date = date.clone().add(1, 'd');
     if (date.isoWeekday() <= 5) {
	 data.push(randomBar(date, data[data.length - 1].y));
	 labels.push(date);
	 }
     }
while (data2.length < 30) {
     date = date.clone().add(1, 'd');
     if (date.isoWeekday() <= 5) {
	 data2.push(randomBar(date, data2[data2.length - 1].y));
	 labels.push(date);
	 }
     }
 var ctx = document.getElementById('myChart').getContext('2d');
 ctx.canvas.width = 1000;
 ctx.canvas.height = 300;
 var chart = new Chart(ctx, {
     // The type of chart we want to create
     type: 'line',
     
     // The data for our dataset
     data: {
	 labels: labels,
	 datasets: [
	     {
		 label: "Male",
		 data: data,
		 type: 'line',
		 pointRadius: 0,
		 fill: false,
		 lineTension: 0,
		 borderWidth: 2,
		 backgroundColor: "rgba(167,105,0,0.4)",
		 borderColor: "rgb(167, 105, 0)",
	     },
	     {
		 label: "Female ",
		 data: data2,
		 type: 'line',
		 pointRadius: 0,
		 fill: false,
		 lineTension: 0,
		 borderWidth: 2,
		 backgroundColor: "rgba(225,0,0,0.4)",
		 borderColor: "red", // The main line color
	     }

	 ]
	 },
     // Configuration options go here
     options: {
	 scales: {
	     xAxes: [{
		 type: 'time',
		 distribution: 'series',
		 ticks: {
		     source: 'labels'
		     }
		 }],
	     yAxes: [{
		 scaleLabel: {
		     display: true,
		     labelString: 'Number Of Incidents'
		     }
		 }]
	     }
	 }
 });
</script>
